% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/portfolioBacktest.R
\name{portfolioBacktest}
\alias{portfolioBacktest}
\title{Backtest Portfolios over Multiple Datasets on a Rolling-Window Basis}
\usage{
portfolioBacktest(portfolio_funs = NULL, dataset_list,
  folder_path = NULL, price_name = "adjusted", paral_portfolios = 1,
  paral_datasets = 1, show_progress_bar = FALSE, benchmark = NULL,
  shortselling = TRUE, leverage = Inf, T_rolling_window = 252,
  optimize_every = 20, rebalance_every = 1, cpu_time_limit = Inf,
  return_portfolio = TRUE, return_return = TRUE)
}
\arguments{
\item{portfolio_funs}{a function that takes as input a list of \code{xts} objects containing the stock prices, 
see \href{https://rawgit.com/dppalomar/portfolioBacktest/master/vignettes/PortfolioBacktest.html}{GitHub-vignette}}

\item{dataset_list}{a list with each element be a list of \code{xts} objects, 
see \href{https://rawgit.com/dppalomar/portfolioBacktest/master/vignettes/PortfolioBacktest.html}{GitHub-vignette}}

\item{folder_path}{the path of folder containing the portfolio functions saved in files, only valid when \code{portfolio_funs} is not passed.}

\item{price_name}{name of the xts column in each dataset that contains the prices to be used in the portfolio return computation (default \code{"adjusted"}).}

\item{paral_portfolios}{an positive interger indicating number of portfolios to be evaluated in parallel (default \code{1}).}

\item{paral_datasets}{an positive interger indicating number of datasets to be used per portfolio in parallel (default \code{1}).}

\item{show_progress_bar}{logical value indicating whether to show progress bar (default: \code{FALSE}).}

\item{benchmark}{a string vector indicating the benchmark portfolios to be incorporated, now support the follows:
\itemize{\item{\code{uniform} - the uniform portfolio, \eqn{w = [1/N, ..., 1/N]} with \eqn{N} be number of stocks (default)}
         \item{\code{index} - the market index return, requires pass \code{index} in corresponding dataset}}}

\item{shortselling}{logical value indicating whether shortselling is allowed or not (default \code{FALSE}).}

\item{leverage}{amount of leverage (default is 1, so no leverage) (default \code{1}).}

\item{T_rolling_window}{length of the rolling window (default \code{252}).}

\item{optimize_every}{how often the portfolio is to be optimized (default \code{20}).}

\item{rebalance_every}{how often the portfolio is to be rebalanced (default \code{20}).}

\item{cpu_time_limit}{time limit for executing portfolio function once on a single data set (default \code{Inf}).}

\item{return_portfolio}{logical value indicating whether to return portfolios (default \code{TRUE}).}

\item{return_return}{logical value indicating whether to return the portfolio returns (default \code{TRUE}).}
}
\value{
A list containing the portfolio backtest results to be further handled by \code{backtestSelector()} and \code{backtestSummary()}.
}
\description{
Backtest a portfolio design contained in a function on a rolling-window basis of a set of prices.
}
\examples{
library(portfolioBacktest)
data("dataset10")  # load dataset

# define your own portfolio function
uniform_portfolio <- function(dataset) {
  N <- ncol(dataset$adjusted)
  return(rep(1/N, N))
}

# do backtest
bt <- portfolioBacktest(list("Uniform" = uniform_portfolio), dataset10)

# check your result
names(bt)

}
\author{
Daniel P. Palomar and Rui Zhou
}
