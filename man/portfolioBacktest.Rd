% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/portfolioBacktest.R
\name{portfolioBacktest}
\alias{portfolioBacktest}
\title{Backtesting Portfolio Design on a Rolling-Window Basis of Set of Prices}
\usage{
portfolioBacktest(portfolio_fun, prices, ...)
}
\arguments{
\item{portfolio_fun}{function that takes as input an \code{xts} containing the stock prices and returns the portfolio weights.}

\item{prices}{a list of \code{xts} containing the stock prices for the backtesting.}

\item{shortselling}{whether shortselling is allowed or not (default \code{FALSE}).}

\item{leverage}{amount of leverage (default is 1, so no leverage).}

\item{T_sliding_window}{length of the sliding window.}

\item{freq_optim}{how often the portfolio is to be reoptimized.}

\item{freq_rebalance}{how often the portfolio is to be rebalanded.}
}
\value{
A list containing the performance in the following elements:
\item{\code{returns}  }{xts object, the daily return of given portfolio function}
\item{\code{cumPnL}  }{xts object, the cummulative daily return of given portfolio function}
\item{\code{performance}}{matrix, each row is responding to one data example in order}
\item{\code{performance_summary}}{vector, summarizing the performance by its median value}
\item{\code{time}}{vector, recording time for execute the portfolio for one data example}
\item{\code{time_average}}{number, the average of \code{time} but ignoring the NAs}
\item{\code{failure_ratio}}{number, the failure ratio of applying given portfolio function to different data examples}
\item{\code{error}}{logical vector, indicating whether an error happens in data examples}
\item{\code{error_message}}{string list, recording the error message when error happens}
}
\description{
Backtest a portfolio design contained in a function on a rolling-window basis of a set of prices.
}
\examples{
library(backtestPortfolio)
library(xts)

# load data
data(prices)

# define portfolio function
portfolio_fun <- function(prices) {
  X <- diff(log(prices))[-1]  # compute log returns
  Sigma <- cov(X)  # compute SCM
  # design GMVP
  w <- solve(Sigma, rep(1, nrow(Sigma)))
  w <- w/sum(abs(w))  # normalized to have ||w||_1=1
  return(w)
}

# perform backtesting on one xts
res <- portfolioBacktest(portfolio_fun, prices[[1]], shortselling = TRUE)
names(res)
plot(res$cumPnL)
res$performance

# perform backtesting on a list of xts
mul_res <- portfolioBacktest(portfolio_fun, prices, shortselling = TRUE)
mul_res$performance
mul_res$performance_summary

}
\author{
Daniel P. Palomar and Rui Zhou
}
