% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/portfolioBacktest.R
\name{portfolioBacktest}
\alias{portfolioBacktest}
\title{Backtesting Portfolio Design on a Rolling-Window Basis of Set of Prices}
\usage{
portfolioBacktest(portfolio_funs = NULL, dataset, folder_path = NULL,
  paral_portfolios = 1, show_progress_bar = FALSE, benchmark = NULL,
  ...)
}
\arguments{
\item{portfolio_funs}{function that takes as input an \code{xts} containing the stock prices and returns the portfolio weights.}

\item{dataset}{a list with each element be a list of follows:
\itemize{\item{\code{prices} - an xts object containing the stock prices for backtesting}
         \item{\code{index} - an xts object containing the market index of above \code{prices} with exact same time index}}.}

\item{folder_path}{the path of folder containing the portfolio functions saved in files, only valid when \code{portfolio_fun} is not passed.}

\item{paral_portfolios}{an positive interger indicating number of portfolios to be evaluated in parallel (default \code{1}).}

\item{show_progress_bar}{logical value indicating whether to show progress bar (default: \code{FALSE}).}

\item{benchmark}{a string vector indicating the benchmark portfolios to be incorporated, now support the follows:
\itemize{\item{\code{uniform} - the uniform portfolio, \eqn{w = [1/N, ..., 1/N]} with \eqn{N} be number of stocks (default)}
         \item{\code{index} - the market index return, requires pass \code{index} in corresponding dataset}}}

\item{paral_datasets}{an positive interger indicating number of datasets to be used per portfolio in parallel (default \code{1}).}

\item{shortselling}{logical value indicating whether shortselling is allowed or not (default \code{FALSE}).}

\item{leverage}{amount of leverage (default is 1, so no leverage) (default \code{1}).}

\item{T_rolling_window}{length of the rolling window (default \code{252}).}

\item{optimize_every}{how often the portfolio is to be optimized (default \code{20}).}

\item{rebalance_every}{how often the portfolio is to be rebalanced (default \code{20}).}

\item{cpu_time_limit}{time limit for executing portfolio function once on a single data set (default \code{Inf}).}

\item{return_portfolio}{logical value indicating whether to return portfolios (default \code{TRUE}).}

\item{return_return}{logical value indicating whether to return the portfolio returns (default \code{TRUE}).}
}
\value{
A list containing the portfolio backtest results to be further handled by \code{backtestSelector()} and \code{backtestSummary()}.
}
\description{
Backtest a portfolio design contained in a function on a rolling-window basis of a set of prices.
}
\examples{
library(xts)
library(backtestPortfolio)

# load data
data(prices)

# define portfolio function
portfolio_fun <- function(prices) {
  X <- diff(log(prices))[-1]  # compute log returns
  Sigma <- cov(X)  # compute SCM
  # design GMVP
  w <- solve(Sigma, rep(1, nrow(Sigma)))
  w <- w/sum(abs(w))  # normalized to have ||w||_1=1
  return(w)
}

# perform backtesting on one xts
res <- portfolioBacktest(portfolio_fun, prices[[1]], shortselling = TRUE)
names(res)
plot(res$cumPnL)
res$performance

# perform backtesting on a list of xts
mul_res <- portfolioBacktest(portfolio_fun, prices, shortselling = TRUE)
mul_res$performance
mul_res$performance_summary

}
\author{
Daniel P. Palomar and Rui Zhou
}
